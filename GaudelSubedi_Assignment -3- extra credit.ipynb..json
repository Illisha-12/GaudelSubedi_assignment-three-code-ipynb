{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "** A Simple Math Quiz **\n",
      "************************\n",
      "2. Subtraction\n",
      "3. Multiplication\n",
      "4. Integer Division\n",
      "5. Exit\n",
      "************************\n",
      "1. Addition\n",
      "------------------------\n",
      "Enter your choice: 3\n",
      "Enter your answer\n",
      "39*22 = 858\n",
      "Correct.\n",
      "Enter your choice: 2\n",
      "Enter your answer\n",
      "93-55 = 38\n",
      "Correct.\n",
      "Enter your choice: 1\n",
      "Enter your answer\n",
      "44+70 = 114\n",
      "Correct.\n",
      "Enter your choice: 4\n",
      "Enter your answer\n",
      "80 // 94 = 0.851\n"
     ]
    },
    {
     "ename": "ValueError",
     "evalue": "invalid literal for int() with base 10: '0.851'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-6-766eda51ac9f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     78\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     79\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 80\u001b[0;31m \u001b[0mmain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m<ipython-input-6-766eda51ac9f>\u001b[0m in \u001b[0;36mmain\u001b[0;34m()\u001b[0m\n\u001b[1;32m     71\u001b[0m     \u001b[0;32mwhile\u001b[0m \u001b[0moption\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;36m5\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     72\u001b[0m         \u001b[0mtotal\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtotal\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m         \u001b[0mcorrect\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mquiz_questions\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0moption\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorrect\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m         \u001b[0moption\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_user_question_choice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Exit the quiz.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-6-766eda51ac9f>\u001b[0m in \u001b[0;36mquiz_questions\u001b[0;34m(option, count)\u001b[0m\n\u001b[1;32m     38\u001b[0m         \u001b[0mproblem\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx1\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\" // \"\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m         \u001b[0mansw\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mx1\u001b[0m \u001b[0;34m//\u001b[0m \u001b[0mx2\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m     \u001b[0muser_answ\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mget_user_input_solution\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproblem\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m     \u001b[0mres\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msolution_checking\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muser_answ\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mansw\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcount\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mres\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m<ipython-input-6-766eda51ac9f>\u001b[0m in \u001b[0;36mget_user_input_solution\u001b[0;34m(problem)\u001b[0m\n\u001b[1;32m     45\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Enter your answer\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     46\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mproblem\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 47\u001b[0;31m     \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\" = \"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     48\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     49\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: '0.851'"
     ]
    }
   ],
   "source": [
    "def quiz_introduction():\n",
    "   print(\"*\" * 24)\n",
    "\n",
    "def quiz_introduction():\n",
    "    print(\"*\" * 24)\n",
    "print(\"** A Simple Math Quiz **\")\n",
    "print(\"*\" * 24)\n",
    "\n",
    "def quiz_questions_init():\n",
    "    print(\"1. Addition\")\n",
    "print(\"2. Subtraction\")\n",
    "print(\"3. Multiplication\")\n",
    "print(\"4. Integer Division\")\n",
    "print(\"5. Exit\")\n",
    "\n",
    "def section_separator():\n",
    "# print \"---------------------\" to separate each section\n",
    "  print(\"-\" * 24)\n",
    "\n",
    "def get_user_question_choice():\n",
    "    val = int(input(\"Enter your choice: \"))\n",
    "    return val\n",
    "\n",
    "def quiz_questions(option, count):\n",
    "    import random\n",
    "    x1 = random.randint(1,99)\n",
    "    x2 = random.randint(1,99)\n",
    "    if option == 1:\n",
    "        problem = str(x1) + \"+\" + str(x2)\n",
    "        answ = x1 + x2\n",
    "    elif option == 2:\n",
    "        problem = str(x1) + \"-\" + str(x2)\n",
    "        answ = x1 - x2\n",
    "    elif option == 3:\n",
    "        problem = str(x1) + \"*\" + str(x2)\n",
    "        answ = x1 * x2\n",
    "    elif option == 4:\n",
    "        problem = str(x1) + \" // \" + str(x2)\n",
    "        answ = x1 // x2\n",
    "    user_answ = get_user_input_solution(problem)\n",
    "    res = solution_checking(user_answ, answ, count)\n",
    "    return res\n",
    "\n",
    "def get_user_input_solution(problem):\n",
    "    print(\"Enter your answer\")\n",
    "    print(problem, end=\"\")\n",
    "    result = int(input(\" = \"))\n",
    "    return result\n",
    "\n",
    "def show_result(total, correct):\n",
    "    print(f\"You answered {total} questions with {correct} correct.\")\n",
    "    print(f\"Your score is {round(correct*100/total,2)}%. Thank you.\")\n",
    "\n",
    "def solution_checking(user_solution, solution, count):\n",
    "    if int(user_solution) == int(solution):\n",
    "        res = count + 1\n",
    "        print(\"Correct.\")\n",
    "    else:\n",
    "        res = count\n",
    "        print(\"Wrong.\")\n",
    "    return res\n",
    "\n",
    "\n",
    "def main():\n",
    "    total = 0\n",
    "    correct = 0\n",
    "    quiz_introduction()\n",
    "    quiz_questions_init()\n",
    "    section_separator()\n",
    "    option = get_user_question_choice()\n",
    "    while option != 5:\n",
    "        total = total + 1\n",
    "        correct = quiz_questions(option, correct)\n",
    "        option = get_user_question_choice()\n",
    "    print(\"Exit the quiz.\")\n",
    "    section_separator()\n",
    "    show_result(total, correct)\n",
    "    \n",
    "\n",
    "main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
